CBMC version 5.11 (cbmc-5.11) 64-bit x86_64 linux
Parsing /home/neeraj/Desktop/FYP/C_Programs/cprog7.c
Converting
Type-checking cprog7
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Rewriting existing assertions as assumptions
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
size of program expression: 80 steps
Generated 22 VCC(s), 22 remaining after simplification
Passing problem to propositional reduction
converting SSA
Aiming to cover 22 goal(s)
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 1266 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks > 100' true
Covered function main condition `marks < 0' false
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 569 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks > 100' false
Covered function main condition `marks < 0' true
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 570 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks < 50' true
Covered function main condition `marks >= 50' false
Covered function main condition `marks < 60' true
Covered function main condition `marks >= 60' false
Covered function main condition `marks < 70' true
Covered function main condition `marks >= 70' false
Covered function main condition `marks < 80' false
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 570 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks < 50' false
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 164 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks < 60' false
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 164 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks < 70' false
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 164 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks < 80' true
Covered function main condition `marks >= 80' false
Covered function main condition `marks < 90' true
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 163 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `marks < 90' false
Solving with MiniSAT 2.2.1 with simplifier
470 variables, 0 clauses
SAT checker inconsistent: instance is UNSATISFIABLE
Runtime decision procedure: 0.00501204s

** coverage results:
[main.coverage.1] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 7 function main condition `marks > 100' false: SATISFIED
[main.coverage.2] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 7 function main condition `marks > 100' true: SATISFIED
[main.coverage.3] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 7 function main condition `marks < 0' false: SATISFIED
[main.coverage.4] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 7 function main condition `marks < 0' true: SATISFIED
[main.coverage.5] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 11 function main condition `marks < 50' false: SATISFIED
[main.coverage.6] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 11 function main condition `marks < 50' true: SATISFIED
[main.coverage.7] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 15 function main condition `marks >= 50' false: SATISFIED
[main.coverage.8] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 15 function main condition `marks >= 50' true: FAILED
[main.coverage.9] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 15 function main condition `marks < 60' false: SATISFIED
[main.coverage.10] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 15 function main condition `marks < 60' true: SATISFIED
[main.coverage.11] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 19 function main condition `marks >= 60' false: SATISFIED
[main.coverage.12] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 19 function main condition `marks >= 60' true: FAILED
[main.coverage.13] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 19 function main condition `marks < 70' false: SATISFIED
[main.coverage.14] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 19 function main condition `marks < 70' true: SATISFIED
[main.coverage.15] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 23 function main condition `marks >= 70' false: SATISFIED
[main.coverage.16] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 23 function main condition `marks >= 70' true: FAILED
[main.coverage.17] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 23 function main condition `marks < 80' false: SATISFIED
[main.coverage.18] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 23 function main condition `marks < 80' true: SATISFIED
[main.coverage.19] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 27 function main condition `marks >= 80' false: SATISFIED
[main.coverage.20] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 27 function main condition `marks >= 80' true: FAILED
[main.coverage.21] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 27 function main condition `marks < 90' false: SATISFIED
[main.coverage.22] file /home/neeraj/Desktop/FYP/C_Programs/cprog7.c line 27 function main condition `marks < 90' true: SATISFIED

** 18 of 22 covered (81.8%)
** Used 9 iterations
Test suite:









