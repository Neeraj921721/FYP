CBMC version 5.11 (cbmc-5.11) 64-bit x86_64 linux
Parsing /home/neeraj/Desktop/FYP/C_Programs/cprog1.c
Converting
Type-checking cprog1
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Rewriting existing assertions as assumptions
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
size of program expression: 47 steps
Generated 16 VCC(s), 8 remaining after simplification
Passing problem to propositional reduction
converting SSA
Aiming to cover 16 goal(s)
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
136 variables, 75 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `y < 10' true
Covered function main condition `x < 10' true
Covered function main condition `x > 10' false
Covered function main condition `y < 10' true
Covered function main condition `y > 10' false
Covered function main condition `x < 10' true
Covered function main condition `y > 10' false
Covered function main condition `x > 10' false
Solving with MiniSAT 2.2.1 with simplifier
136 variables, 0 clauses
SAT checker inconsistent: instance is UNSATISFIABLE
Runtime decision procedure: 0.00049164s

** coverage results:
[main.coverage.1] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 6 function main condition `y < 10' false: FAILED
[main.coverage.2] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 6 function main condition `y < 10' true: SATISFIED
[main.coverage.3] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 6 function main condition `x < 10' false: FAILED
[main.coverage.4] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 6 function main condition `x < 10' true: SATISFIED
[main.coverage.5] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 10 function main condition `x > 10' false: SATISFIED
[main.coverage.6] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 10 function main condition `x > 10' true: FAILED
[main.coverage.7] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 10 function main condition `y < 10' false: FAILED
[main.coverage.8] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 10 function main condition `y < 10' true: SATISFIED
[main.coverage.9] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 13 function main condition `y > 10' false: SATISFIED
[main.coverage.10] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 13 function main condition `y > 10' true: FAILED
[main.coverage.11] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 13 function main condition `x < 10' false: FAILED
[main.coverage.12] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 13 function main condition `x < 10' true: SATISFIED
[main.coverage.13] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 17 function main condition `y > 10' false: SATISFIED
[main.coverage.14] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 17 function main condition `y > 10' true: FAILED
[main.coverage.15] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 17 function main condition `x > 10' false: SATISFIED
[main.coverage.16] file /home/neeraj/Desktop/FYP/C_Programs/cprog1.c line 17 function main condition `x > 10' true: FAILED

** 8 of 16 covered (50.0%)
** Used 2 iterations
Test suite:


