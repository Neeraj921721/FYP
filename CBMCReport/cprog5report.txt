CBMC version 5.11 (cbmc-5.11) 64-bit x86_64 linux
Parsing /home/neeraj/Desktop/FYP/C_Programs/cprog5.c
Converting
Type-checking cprog5
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Rewriting existing assertions as assumptions
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
size of program expression: 41 steps
Generated 6 VCC(s), 3 remaining after simplification
Passing problem to propositional reduction
converting SSA
Aiming to cover 6 goal(s)
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
40 variables, 11 clauses
SAT checker: instance is SATISFIABLE
Covered function main condition `i == 10' false
Covered function main condition `i < 15' false
Covered function main condition `i < 12' false
Solving with MiniSAT 2.2.1 with simplifier
40 variables, 0 clauses
SAT checker inconsistent: instance is UNSATISFIABLE
Runtime decision procedure: 0.00035508s

** coverage results:
[main.coverage.1] file /home/neeraj/Desktop/FYP/C_Programs/cprog5.c line 6 function main condition `i == 10' false: SATISFIED
[main.coverage.2] file /home/neeraj/Desktop/FYP/C_Programs/cprog5.c line 6 function main condition `i == 10' true: FAILED
[main.coverage.3] file /home/neeraj/Desktop/FYP/C_Programs/cprog5.c line 9 function main condition `i < 15' false: SATISFIED
[main.coverage.4] file /home/neeraj/Desktop/FYP/C_Programs/cprog5.c line 9 function main condition `i < 15' true: FAILED
[main.coverage.5] file /home/neeraj/Desktop/FYP/C_Programs/cprog5.c line 15 function main condition `i < 12' false: SATISFIED
[main.coverage.6] file /home/neeraj/Desktop/FYP/C_Programs/cprog5.c line 15 function main condition `i < 12' true: FAILED

** 3 of 6 covered (50.0%)
** Used 2 iterations
Test suite:


